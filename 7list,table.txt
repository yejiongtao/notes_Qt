1、QListWidget 列表：支持两种显示模式：list，icon （默认是list）
	QListWidgetItem：列表中的项
	QIcon:图标

qrc：虚拟的资源文件系统，可以用:/直接访问

//widget.h
		#ifndef WIDGET_H
		#define WIDGET_H

		#include <QWidget>
		#include <QComboBox>
		#include <QListWidget>

		class Widget : public QWidget
		{
			Q_OBJECT

		public:
			Widget(QWidget *parent = 0);
			~Widget();

		protected slots:
			void onModeChanged(const QString& str);

		protected:
			QComboBox *Mode;
			QListWidget *List;
		};

		#endif // WIDGET_H
//widget.cpp
		#include "widget.h"
		#include <QVBoxLayout>
		#include <QListWidgetItem>
		#include <QIcon>
		#include <QLabel>

		Widget::Widget(QWidget *parent)
			: QWidget(parent)
		{
			QVBoxLayout *Layout=new QVBoxLayout(this);
			Mode=new QComboBox;
			Mode->addItem("List");
			Mode->addItem("Icon");
			Layout->addWidget(Mode);
			List=new QListWidget;
			Layout->addWidget(List, 1);
			connect(Mode,SIGNAL(currentTextChanged(QString)),this,SLOT(onModeChanged(QString)));
			QLabel *Label=new QLabel;
			Layout->addWidget(Label);
			connect(List,SIGNAL(currentTextChanged(QString)),Label,SLOT(setText(QString)));	//记住！！！

			QListWidgetItem *Item=new QListWidgetItem(QIcon(":/audioFile.png"),"audioFile");
			List->addItem(Item);
			Item=new QListWidgetItem(QIcon(":/folder.png"),"folder");
			List->addItem(Item);
			Item=new QListWidgetItem(QIcon(":/imageFile.png"),"imageFile");
			List->addItem(Item);
			Item=new QListWidgetItem(QIcon(":/videoFile.png"),"videoFile");
			List->addItem(Item);
			List->addItem("txt");               //另外一种构造方式
		}

		Widget::~Widget()
		{

		}

		void Widget::onModeChanged(const QString &str)
		{
			if(str == "List")
			{
				List->setViewMode(QListView::ListMode);	//记住！！
			}
			else
			{
				List->setViewMode(QListView::IconMode);
			}
		}

2、QTableWidget 表格
	注意：各个cell中的widget不能共享，否则在销毁表格的时候会重复销毁共享的widget导致崩溃。
		表格的行列是不包括表头的。
		comboBox中默认index设为-1，就没有默认值。
		把comboBox中的currentIndexChanged信号连接到槽上这个动作不能太靠前，要在setCurrentIndex之后。

        sortItems()可以对行进行排序

//widget.h
		#ifndef WIDGET_H
		#define WIDGET_H

		#include <QWidget>
		#include <QTableWidget>
		#include <QTableWidgetItem>

		class Widget : public QWidget
		{
			Q_OBJECT

		public:
			Widget(QWidget *parent = 0);
			~Widget();

		protected slots:
			void onItemChanged(QTableWidgetItem *item);
			void onCurrentIndexChanged(int index);

		protected:
			QTableWidget *Table;

		};

		#endif // WIDGET_H
//widget.cpp
		#include "widget.h"
		#include <QVBoxLayout>
		#include <QComboBox>
		#include <QStringList>

		Widget::Widget(QWidget *parent)
			: QWidget(parent)
		{
			QVBoxLayout *Layout=new QVBoxLayout(this);
			Table=new QTableWidget;
			Layout->addWidget(Table);
			Table->setRowCount(3);
			Table->setColumnCount(3);
			Table->setSelectionBehavior(QAbstractItemView::SelectRows);//高级，选中一个会选中整行

			QStringList RowHeaders("语文");
			RowHeaders<<"数学"<<"评价";
			Table->setHorizontalHeaderLabels(RowHeaders);   //也可以setHorizontalHeader()来一个一个加
			QStringList ColumnHeaders("张三");
			ColumnHeaders<<"李四"<<"王五";
			Table->setVerticalHeaderLabels(ColumnHeaders);

			QComboBox *Eval0=new QComboBox;
			Eval0->addItem("通过");
			Eval0->addItem("挂掉");
			Eval0->setCurrentIndex(-1);         //默认没有选中
			Table->setCellWidget(0,2,Eval0);    //记住
			connect(Eval0,SIGNAL(currentIndexChanged(int)),this,SLOT(onCurrentIndexChanged(int)));
			QComboBox *Eval1=new QComboBox;
			Eval1->addItem("通过");
			Eval1->addItem("挂掉");
			Eval1->setCurrentIndex(-1);
			Table->setCellWidget(1,2,Eval1);
			connect(Eval1,SIGNAL(currentIndexChanged(int)),this,SLOT(onCurrentIndexChanged(int)));
			QComboBox *Eval2=new QComboBox;
			Eval2->addItem("通过");
			Eval2->addItem("挂掉");
			Eval2->setCurrentIndex(-1);
			Table->setCellWidget(2,2,Eval2);
			connect(Eval2,SIGNAL(currentIndexChanged(int)),this,SLOT(onCurrentIndexChanged(int)));

			connect(Table,SIGNAL(itemChanged(QTableWidgetItem*)),this,SLOT(onItemChanged(QTableWidgetItem*)));//注意不是currentItemChanged
		}

		Widget::~Widget()
		{

		}

		void Widget::onItemChanged(QTableWidgetItem *item)
		{
			if(item->text().toInt() < 60)           //注意toInt，还有很多别的
				item->setTextColor(Qt::red);        //注意颜色的表达
		}

		void Widget::onCurrentIndexChanged(int index)
		{
			int col=Table->currentRow();
			if(index==0)
				Table->verticalHeaderItem(col)->setTextColor(Qt::green);
			else
				Table->verticalHeaderItem(col)->setTextColor(Qt::red);
		}


